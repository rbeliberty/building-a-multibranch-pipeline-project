ARG PHP_VERSION=7.4
ARG NGINX_VERSION=1.17

#### STAGE 1 : Compopser
FROM composer as composer
COPY composer.json /app
COPY composer.lock /app
RUN composer install --no-scripts --no-suggest --no-interaction --prefer-dist --optimize-autoloader
COPY . /app
RUN composer dump-autoload --optimize --classmap-authoritative

#### "STAGE 2: PHP
FROM php:${PHP_VERSION}-fpm AS symfony_php
RUN apt-get update && apt-get install --no-install-recommends --no-install-suggests -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg2 \
    dirmngr \
    unzip \
    zip \
    net-tools \
    iputils-ping \
    nano

COPY docker/php/conf.d/symfony.ini $PHP_INI_DIR/conf.d/symfony.ini

WORKDIR /srv/app
COPY . .

COPY --from=composer /usr/bin/composer /usr/bin/composer
COPY --from=composer /app/vendor /srv/app/vendor

COPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint
RUN chmod +x /usr/local/bin/docker-entrypoint

ENTRYPOINT ["docker-entrypoint"]
CMD php-fpm

########################################################################################################## "nginx" stage
# depends on the "php" stage above
FROM nginx:${NGINX_VERSION} AS symfony_nginx
RUN apt-get update && apt-get install --no-install-recommends --no-install-suggests -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg2 \
    dirmngr \
    unzip \
    zip \
    net-tools \
    iputils-ping \
    nano

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
	&& ln -sf /dev/stderr /var/log/nginx/error.log

RUN rm /etc/nginx/conf.d/default.conf
COPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/

WORKDIR /srv/app

COPY --from=symfony_php /srv/app/public public/

VOLUME /srv/app
VOLUME /etc/nginx/conf.d

